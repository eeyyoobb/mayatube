// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  password String
  image String?
  createdAt DateTime @default(now())
  subscribedChannelIds String[] @db.ObjectId
  likedVideoIds String[] @db.ObjectId
  dislikedVideoIds String[] @db.ObjectId
  quizResults QuizResult[]

  account Account?
  channel Channel?
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId @unique
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Channel {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId @unique
  name String
  handle String
  imageSrc String
  createdAt DateTime @default(now())
  subscriberCount Int @default(0)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade) 

  comments Comment[]
  videos Video[]
}

model Video {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  channelId String @db.ObjectId
  title String
  description String
  likeCount Int @default(0)
  dislikeCount Int @default(0)
  viewCount Int @default(0)
  createdAt DateTime @default(now())
  thumbnailSrc String
  videoSrc String

  channel Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)
  
  comments Comment[]
}

model Comment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  videoId String @db.ObjectId
  channelId String @db.ObjectId
  text String
  createdAt DateTime @default(now())

  video Video @relation(fields: [videoId], references: [id], onDelete: Cascade)
  channel Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)
}

model Task {
  id          String    @id @default(cuid()) @map("_id")
  title       String
  description String?
  link        String
  isCompleted Boolean   @default(false)
  isImportant Boolean   @default(false)

  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")
  userId      String 
  key Int?
}

model QuizResult {
  id             String   @id @default(cuid()) @map("_id")
  quizScore      Int
  correctAnswers Int
  wrongAnswers   Int
  createdAt      DateTime @default(now())

  user           User     @relation(fields: [userId], references: [id])
  userId  String  @db.ObjectId
}

model Quiz {
  id            String     @id @default(cuid()) @map("_id")
  quizTitle     String
  icon          String
  quizQuestions Question[] 
}

model Question {
  id             String     @id @default(cuid()) @map("_id")
  mainQuestion   String
  choices        String[]
  correctAnswer  Int
  answeredResult Int
  statisticsId   String     @unique
  quizId         String
  category       String?
  difficulty     String?

  quiz           Quiz       @relation(fields: [quizId], references: [id])
  statistics     Statistics ?
}


model Statistics {
  id                 String     @id @default(cuid()) @map("_id")
  totalAttempts      Int   @default(0)
  correctAttempts    Int   @default(0)
  incorrectAttempts  Int   @default(0)
  question           Question @relation(fields: [questionId], references: [id])
  questionId         String    @unique
}

model Product {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  price Float
  // Add more fields for products
}

model Order {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  userId     String @db.ObjectId
  productIds String[] @db.ObjectId
  createdAt  DateTime @default(now())
}

model Media {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  fileName String
  url      String
}

model ProductFile {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  fileName String
  productId String @db.ObjectId
}


